{"ast":null,"code":"var _jsxFileName = \"/Users/natsuki/Downloads/diaandco/src/App.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"./css/App.scss\";\nimport SearchBar from \"./components/SearchBar\";\nimport ArticleContainer from \"./components/ArticleContainer\";\nimport GoTop from \"./components/GoTop\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  const [articles, setArticles] = useState({\n    articles: []\n  });\n  const [userInput, setUserInput] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"\");\n\n  const handleChange = e => {\n    let input = e.target.value;\n\n    switch (e.target.className) {\n      case \"UserSelect\":\n        input === \"none\" ? setSortBy(\"\") : setSortBy(input);\n        break;\n\n      case \"UserInput\":\n        setUserInput(input.toLowerCase());\n        break;\n\n      default:\n        console.log(\"key not found\");\n    }\n  };\n\n  async function fetchData() {\n    let endPoint = \"http://newsapi.org/v2/everything\";\n    let userInputVal = userInput ? `?q=${userInput}` : `?q=\"\"`;\n    let sortByVal = sortBy ? `&sortBy=${sortBy}` : `&sortBy=\"\"`;\n    const language = \"&language=en\";\n    const apiKey = `&apiKey=${API_KEY}`;\n    fetch(endPoint + userInputVal + sortByVal + language + apiKey).then(res => res.json()).then(data => setArticles(data)).then(console.log(articles, \"articles\"));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    userInput: userInput,\n    sortBy: sortBy,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ArticleContainer, {\n    articles: articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(GoTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App; // class App extends Component {\n//   state = {\n//     articles: [],\n//     userInput: \"\",\n//     sortBy: \"\",\n//   };\n//   const [userInput, setUserInput] = useState(\"\");\n//   const [sortBy, setSortBy] = useState(\"\");\n//   handleChange = (e) => {\n//     let input = e.target.value;\n//     if (e.target.className === \"UserSelect\") {\n//       input === \"none\"\n//         ? this.setState({ sortBy: \"\" })\n//         : this.setState({ sortBy: input });\n//     } else {\n//       this.setState({ userInput: input.toLowerCase() });\n//     }\n//   };\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     let endPoint = \"http://newsapi.org/v2/everything\";\n//     let userInput = this.state.userInput\n//       ? `?q=${this.state.userInput}`\n//       : `?q=\"\"`;\n//     let sortBy = this.state.sortBy\n//       ? `&sortBy=${this.state.sortBy}`\n//       : `&sortBy=\"\"`;\n//     let language = \"&language=en\";\n//     let apiKey = `&apiKey=${API_KEY}`;\n//     fetch(endPoint + userInput + sortBy + language + apiKey)\n//       .then((res) => res.json())\n//       .then((data) => this.setState({ articles: data.articles }));\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <SearchBar\n//           userInput={this.state.userInput}\n//           sortBy={this.state.sortBy}\n//           handleChange={this.handleChange}\n//           handleSubmit={this.handleSubmit}\n//         />\n//         <ArticleContainer articles={this.state.articles} />\n//         <GoTop />\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/natsuki/Downloads/diaandco/src/App.js"],"names":["React","Component","useState","useEffect","SearchBar","ArticleContainer","GoTop","API_KEY","process","env","REACT_APP_API_KEY","App","articles","setArticles","userInput","setUserInput","sortBy","setSortBy","handleChange","e","input","target","value","className","toLowerCase","console","log","fetchData","endPoint","userInputVal","sortByVal","language","apiKey","fetch","then","res","json","data","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport \"./css/App.scss\";\nimport SearchBar from \"./components/SearchBar\";\nimport ArticleContainer from \"./components/ArticleContainer\";\nimport GoTop from \"./components/GoTop\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  const [articles, setArticles] = useState({ articles: [] });\n  const [userInput, setUserInput] = useState(\"\");\n  const [sortBy, setSortBy] = useState(\"\");\n\n  const handleChange = (e) => {\n    let input = e.target.value;\n    switch (e.target.className) {\n      case \"UserSelect\":\n        input === \"none\" ? setSortBy(\"\") : setSortBy(input);\n        break;\n      case \"UserInput\":\n        setUserInput(input.toLowerCase());\n        break;\n      default:\n        console.log(\"key not found\");\n    }\n  };\n\n  async function fetchData() {\n    let endPoint = \"http://newsapi.org/v2/everything\";\n    let userInputVal = userInput ? `?q=${userInput}` : `?q=\"\"`;\n    let sortByVal = sortBy ? `&sortBy=${sortBy}` : `&sortBy=\"\"`;\n    const language = \"&language=en\";\n    const apiKey = `&apiKey=${API_KEY}`;\n\n    fetch(endPoint + userInputVal + sortByVal + language + apiKey)\n      .then((res) => res.json())\n      .then((data) => setArticles(data))\n      .then(console.log(articles, \"articles\"));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar\n        userInput={userInput}\n        sortBy={sortBy}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n      <ArticleContainer articles={articles} />\n      <GoTop />\n    </div>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n//   state = {\n//     articles: [],\n//     userInput: \"\",\n//     sortBy: \"\",\n//   };\n\n//   const [userInput, setUserInput] = useState(\"\");\n//   const [sortBy, setSortBy] = useState(\"\");\n\n//   handleChange = (e) => {\n//     let input = e.target.value;\n//     if (e.target.className === \"UserSelect\") {\n//       input === \"none\"\n//         ? this.setState({ sortBy: \"\" })\n//         : this.setState({ sortBy: input });\n//     } else {\n//       this.setState({ userInput: input.toLowerCase() });\n//     }\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     let endPoint = \"http://newsapi.org/v2/everything\";\n//     let userInput = this.state.userInput\n//       ? `?q=${this.state.userInput}`\n//       : `?q=\"\"`;\n//     let sortBy = this.state.sortBy\n//       ? `&sortBy=${this.state.sortBy}`\n//       : `&sortBy=\"\"`;\n//     let language = \"&language=en\";\n//     let apiKey = `&apiKey=${API_KEY}`;\n\n//     fetch(endPoint + userInput + sortBy + language + apiKey)\n//       .then((res) => res.json())\n//       .then((data) => this.setState({ articles: data.articles }));\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <SearchBar\n//           userInput={this.state.userInput}\n//           sortBy={this.state.sortBy}\n//           handleChange={this.handleChange}\n//           handleSubmit={this.handleSubmit}\n//         />\n//         <ArticleContainer articles={this.state.articles} />\n//         <GoTop />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}